digraph G {
	subgraph cluster__global1753134165 {
		node [shape="folder", style="filled"];
		//label="_global";
		_global1753134165 [label="_global"];
		_global1753134165 -> instance2094260442;
		instance2094260442 [label = "(F) instance : _global/LatencyMonitor", fillcolor="white" ];
		_global1753134165 -> verificationLoop598722341;
		verificationLoop598722341 [label = "(F) verificationLoop : _global/VerificationLoopDS", fillcolor="white" , peripheries=2];
		_global1753134165 -> EoC79362455;
		EoC79362455 [label = "(F) EoC : bool", fillcolor="white" ];
		_global1753134165 -> BoC1761382759;
		BoC1761382759 [label = "(F) BoC : bool", fillcolor="white" ];
		_global1753134165 -> LatencyMonitor1838584624;
		subgraph cluster_LatencyMonitor1838584624 {
			node [shape="folder", style="filled"];
			//label="LatencyMonitor";
			LatencyMonitor1838584624 [label="LatencyMonitor"];
			LatencyMonitor1838584624 -> latency_xx_ms1620216417;
			latency_xx_ms1620216417 [label = "(F) latency_xx_ms : signed int16", fillcolor="white" ];
			LatencyMonitor1838584624 -> NODE_xx_STATUS134708375;
			NODE_xx_STATUS134708375 [label = "(F) NODE_xx_STATUS : signed int16", fillcolor="white" ];
			LatencyMonitor1838584624 -> errors_xx1559258941;
			errors_xx1559258941 [label = "(F) errors_xx : signed int16", fillcolor="white" ];
			LatencyMonitor1838584624 -> errors_all1905699057;
			errors_all1905699057 [label = "(F) errors_all : signed int16", fillcolor="white" ];
			LatencyMonitor1838584624 -> min_latency_ms407567224;
			min_latency_ms407567224 [label = "(F) min_latency_ms : signed int16", fillcolor="white" ];
			LatencyMonitor1838584624 -> max_latency_ms1582991128;
			max_latency_ms1582991128 [label = "(F) max_latency_ms : signed int16", fillcolor="white" ];
			
			annotations_pseudonode_LatencyMonitor1838584624 [
				label="ANNOTATIONS\llatency_xx_ms : direction=INPUT\llatency_xx_ms : PLC type=INT\lNODE_xx_STATUS : direction=INPUT\lNODE_xx_STATUS : PLC type=INT\lerrors_xx : direction=INOUT\lerrors_xx : PLC type=INT\lerrors_all : direction=INOUT\lerrors_all : PLC type=INT\lmin_latency_ms : direction=INOUT\lmin_latency_ms : PLC type=INT\lmax_latency_ms : direction=INOUT\lmax_latency_ms : PLC type=INT\l",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_LatencyMonitor1838584624 [
				label="INITIAL\llatency_xx_ms := 0\lNODE_xx_STATUS := 0\lerrors_xx := 0\lerrors_all := 0\lmin_latency_ms := 0\lmax_latency_ms := 0\l",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		_global1753134165 -> VerificationLoopDS1144567906;
		subgraph cluster_VerificationLoopDS1144567906 {
			node [shape="folder", style="filled"];
			//label="VerificationLoopDS";
			VerificationLoopDS1144567906 [label="VerificationLoopDS"];
			
			annotations_pseudonode_VerificationLoopDS1144567906 [
				label="ANNOTATIONS",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_VerificationLoopDS1144567906 [
				label="INITIAL",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		
		annotations_pseudonode__global1753134165 [
			label="ANNOTATIONS\lEoC : generated\lBoC : generated\l",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		initamt_pseudonode__global1753134165 [
			label="INITIAL\lEoC := false\lBoC := false\l",
			fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
	}
	subgraph clusterLatencyMonitor {
		node [style="filled"];
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="LatencyMonitor : LatencyMonitor";
		
		annotations_pseudonode_LatencyMonitor [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_LatencyMonitor [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		l1_LatencyMonitor [label="l1", color="black", fillcolor="white", shape="ellipse"];
		l2_LatencyMonitor [label="l2", color="black", fillcolor="white", shape="ellipse"];
		l3_LatencyMonitor [label="l3", color="black", fillcolor="white", shape="ellipse"];
		l4_LatencyMonitor [label="l4", color="black", fillcolor="white", shape="ellipse"];
		l5_LatencyMonitor [label="l5", color="black", fillcolor="white", shape="ellipse"];
		l6_LatencyMonitor [label="l6", color="black", fillcolor="white", shape="ellipse"];
		l7_LatencyMonitor [label="l7", color="black", fillcolor="white", shape="ellipse"];
		l8_LatencyMonitor [label="l8", color="black", fillcolor="white", shape="ellipse"];
		l9_LatencyMonitor [label="l9", color="black", fillcolor="white", shape="ellipse"];
		l10_LatencyMonitor [label="l10", color="black", fillcolor="white", shape="ellipse"];
		l11_LatencyMonitor [label="l11", color="black", fillcolor="white", shape="ellipse"];
		l12_LatencyMonitor [label="l12", color="black", fillcolor="white", shape="ellipse"];
		l13_LatencyMonitor [label="l13", color="black", fillcolor="white", style=bold, shape="ellipse"];
		init_LatencyMonitor -> l1_LatencyMonitor [color="black", label="[((latency_xx_ms = 0) || (NODE_xx_STATUS != 1))]"];
		l1_LatencyMonitor -> l2_LatencyMonitor [color="black", label="errors_xx := (errors_xx + 1)"];
		l2_LatencyMonitor -> l3_LatencyMonitor [color="black", label="errors_all := (errors_all + 1)"];
		init_LatencyMonitor -> l4_LatencyMonitor [color="black", label="[ELSE]"];
		l3_LatencyMonitor -> l5_LatencyMonitor [color="black", label=""];
		l4_LatencyMonitor -> l5_LatencyMonitor [color="black", label=""];
		l5_LatencyMonitor -> l6_LatencyMonitor [color="black", label="[((latency_xx_ms < min_latency_ms) || (min_latency\l_ms < 0))]\l"];
		l6_LatencyMonitor -> l7_LatencyMonitor [color="black", label="min_latency_ms := latency_xx_ms"];
		l5_LatencyMonitor -> l8_LatencyMonitor [color="black", label="[ELSE]"];
		l7_LatencyMonitor -> l9_LatencyMonitor [color="black", label=""];
		l8_LatencyMonitor -> l9_LatencyMonitor [color="black", label=""];
		l9_LatencyMonitor -> l10_LatencyMonitor [color="black", label="[((latency_xx_ms > max_latency_ms) || (max_latency\l_ms < 0))]\l"];
		l10_LatencyMonitor -> l11_LatencyMonitor [color="black", label="max_latency_ms := latency_xx_ms"];
		l9_LatencyMonitor -> l12_LatencyMonitor [color="black", label="[ELSE]"];
		l11_LatencyMonitor -> l13_LatencyMonitor [color="black", label=""];
		l12_LatencyMonitor -> l13_LatencyMonitor [color="black", label=""];
	}
	subgraph clusterVerificationLoop {
		node [style="filled"];
		style=bold;
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="VerificationLoop : VerificationLoopDS";
		
		annotations_pseudonode_VerificationLoop [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_VerificationLoop [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		end_VerificationLoop [label="end", color="black", fillcolor="cadetblue1", style=bold, shape="ellipse"];
		loop_start_VerificationLoop [label="loop_start", color="black", fillcolor="white", shape="ellipse"];
		prepare_BoC_VerificationLoop [label="prepare_BoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		l_main_call_VerificationLoop [label="l_main_call", color="black", fillcolor="white", shape="ellipse"];
		callEnd_VerificationLoop [label="callEnd", color="black", fillcolor="white", shape="ellipse"];
		prepare_EoC_VerificationLoop [label="prepare_EoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		init_VerificationLoop -> loop_start_VerificationLoop [color="black", label=""];
		loop_start_VerificationLoop -> prepare_BoC_VerificationLoop [color="blue", label="instance/NODE_xx_STATUS := NONDETERMINISTIC of sig\lned int16\linstance/errors_all := NONDETERMINISTIC of signed \lint16\linstance/errors_xx := NONDETERMINISTIC of signed i\lnt16\linstance/latency_xx_ms := NONDETERMINISTIC of sign\led int16\linstance/max_latency_ms := NONDETERMINISTIC of sig\lned int16\linstance/min_latency_ms := NONDETERMINISTIC of sig\lned int16\lBoC := true (*)\l"];
		prepare_BoC_VerificationLoop -> l_main_call_VerificationLoop [color="blue", label="BoC := false (*)"];
		l_main_call_VerificationLoop -> callEnd_VerificationLoop [color="black", label="CALL: LatencyMonitor:instance(\l   IN:    OUT: )\l"];
		callEnd_VerificationLoop -> prepare_EoC_VerificationLoop [color="blue", label="EoC := true (*)"];
		prepare_EoC_VerificationLoop -> loop_start_VerificationLoop [color="blue", label="EoC := false (*)"];
		loop_start_VerificationLoop -> end_VerificationLoop [color="black", label="[false]"];
	}
}

