-- Model
MODULE main
	VAR
		loc : {init_pv, end, loop_start, prepare_BoC, l_main_call, callEnd, prepare_EoC};
		instance_i : signed word[16]; -- frozen
		instance_o : signed word[16]; -- frozen
		EoC : boolean; -- frozen
		BoC : boolean; -- frozen
		-- Random vars for nondeterministic INTs
		__random_instance_i : signed word[16];
	
	ASSIGN
		-- CFA structure (loc)
		init(loc) := init_pv;
		next(loc) := case
			loc = init_pv & (TRUE) : loop_start;
			loc = loop_start & (TRUE) : prepare_BoC;
			loc = prepare_BoC & (TRUE) : l_main_call;
			loc = callEnd & (TRUE) : prepare_EoC;
			loc = prepare_EoC & (TRUE) : loop_start;
			loc = l_main_call & (TRUE) : callEnd;
			TRUE: loc;
		esac;
		
		init(instance_i) := 0sd16_0;
		next(instance_i) := case
			loc = loop_start & (TRUE) : __random_instance_i; -- Nondeterministic
			TRUE  : instance_i;
		esac;
		init(instance_o) := 0sd16_0;
		next(instance_o) := case
			loc = l_main_call & (TRUE) : instance_i;
			TRUE  : instance_o;
		esac;
		init(EoC) := FALSE;
		next(EoC) := case
			loc = callEnd & (TRUE) : TRUE;
			loc = prepare_EoC & (TRUE) : FALSE;
			TRUE  : EoC;
		esac;
		init(BoC) := FALSE;
		next(BoC) := case
			loc = loop_start & (TRUE) : TRUE;
			loc = prepare_BoC & (TRUE) : FALSE;
			TRUE  : BoC;
		esac;

-- Requirement
CTLSPEC AG((EoC) -> ((instance_o) = (instance_i)));
