digraph G {
	vars_declaration_pseudonode_network [
		label="VARIABLES\linstance/i = 0\linstance/o = 0\l__assertion_error = 0\lEoC = false\lBoC = false\l",
		fillcolor="lightgray", shape="rectangle"];
	subgraph clusterverificationLoop_VerificationLoop {
		node [style="filled"];
		style=bold;
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="verificationLoop.VerificationLoop";
		
		annotations_pseudonode_verificationLoop_VerificationLoop [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_verificationLoop_VerificationLoop [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		end_verificationLoop_VerificationLoop [label="end", color="black", fillcolor="cadetblue1", style=bold, shape="ellipse"];
		loop_start_verificationLoop_VerificationLoop [label="loop_start", color="black", fillcolor="white", shape="ellipse"];
		prepare_BoC_verificationLoop_VerificationLoop [label="prepare_BoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		l_main_call_verificationLoop_VerificationLoop [label="l_main_call", color="black", fillcolor="white", shape="ellipse"];
		callEnd_verificationLoop_VerificationLoop [label="callEnd", color="black", fillcolor="white", shape="ellipse"];
		prepare_EoC_verificationLoop_VerificationLoop [label="prepare_EoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		verificationLoop_VerificationLoop_init_verificationLoop_VerificationLoop [label="verificationLoop.VerificationLoop_init", color="black", fillcolor="white", shape="ellipse"];
		verificationLoop_VerificationLoop_l9_verificationLoop_VerificationLoop [label="verificationLoop.VerificationLoop_l9", color="black", fillcolor="white", shape="ellipse"];
		init_verificationLoop_VerificationLoop -> loop_start_verificationLoop_VerificationLoop [color="black", label=""];
		loop_start_verificationLoop_VerificationLoop -> prepare_BoC_verificationLoop_VerificationLoop [color="blue", label="instance/i := NONDETERMINISTIC of signed int16\lBoC := true (*)\l"];
		prepare_BoC_verificationLoop_VerificationLoop -> l_main_call_verificationLoop_VerificationLoop [color="blue", label="BoC := false (*)"];
		callEnd_verificationLoop_VerificationLoop -> prepare_EoC_verificationLoop_VerificationLoop [color="blue", label="EoC := true (*)"];
		prepare_EoC_verificationLoop_VerificationLoop -> loop_start_verificationLoop_VerificationLoop [color="blue", label="EoC := false (*)"];
		loop_start_verificationLoop_VerificationLoop -> end_verificationLoop_VerificationLoop [color="black", label="[false]"];
		verificationLoop_VerificationLoop_init_verificationLoop_VerificationLoop -> verificationLoop_VerificationLoop_l9_verificationLoop_VerificationLoop [color="black", label="[(instance/i = 0)]\linstance/o := 0\l"];
		verificationLoop_VerificationLoop_init_verificationLoop_VerificationLoop -> verificationLoop_VerificationLoop_l9_verificationLoop_VerificationLoop [color="black", label="[((! (instance/i = 0)) && ((instance/i >= 1) && (i\lnstance/i <= 5)))]\linstance/o := (instance/i * instance/i)\l"];
		verificationLoop_VerificationLoop_init_verificationLoop_VerificationLoop -> verificationLoop_VerificationLoop_l9_verificationLoop_VerificationLoop [color="black", label="[(((! (instance/i = 0)) && (! ((instance/i >= 1) &\l& (instance/i <= 5)))) && ((instance/i >= 6) && (i\lnstance/i <= 10)))]\linstance/o := (instance/i + (2 * instance/i))\l"];
		verificationLoop_VerificationLoop_init_verificationLoop_VerificationLoop -> verificationLoop_VerificationLoop_l9_verificationLoop_VerificationLoop [color="black", label="[((! (instance/i = 0)) && ((! ((! (instance/i = 0)\l) && ((instance/i >= 1) && (instance/i <= 5)))) &&\l (! (((! (instance/i = 0)) && (! ((instance/i >= 1\l) && (instance/i <= 5)))) && ((instance/i >= 6) &&\l (instance/i <= 10))))))]\linstance/o := (- 1)\l"];
		l_main_call_verificationLoop_VerificationLoop -> verificationLoop_VerificationLoop_init_verificationLoop_VerificationLoop [color="black", label=""];
		verificationLoop_VerificationLoop_l9_verificationLoop_VerificationLoop -> callEnd_verificationLoop_VerificationLoop [color="black", label=""];
	}
}

