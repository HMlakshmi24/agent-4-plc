digraph G {
	subgraph cluster__global2027044202 {
		node [shape="folder", style="filled"];
		//label="_global";
		_global2027044202 [label="_global"];
		_global2027044202 -> instance1778993228;
		instance1778993228 [label = "(F) instance : _global/FB_LoopCounter", fillcolor="white" ];
		_global2027044202 -> __assertion_error1824225917;
		__assertion_error1824225917 [label = "(F) __assertion_error : unsigned int16", fillcolor="white" ];
		_global2027044202 -> verificationLoop980979680;
		verificationLoop980979680 [label = "(F) verificationLoop : _global/VerificationLoopDS", fillcolor="white" , peripheries=2];
		_global2027044202 -> EoC747833043;
		EoC747833043 [label = "(F) EoC : bool", fillcolor="white" ];
		_global2027044202 -> BoC936544568;
		BoC936544568 [label = "(F) BoC : bool", fillcolor="white" ];
		_global2027044202 -> FB_LoopCounter1651379334;
		subgraph cluster_FB_LoopCounter1651379334 {
			node [shape="folder", style="filled"];
			//label="FB_LoopCounter";
			FB_LoopCounter1651379334 [label="FB_LoopCounter"];
			FB_LoopCounter1651379334 -> i677007331;
			i677007331 [label = "(F) i : bool", fillcolor="white" ];
			FB_LoopCounter1651379334 -> macro700791887;
			macro700791887 [label = "(F) macro : signed int16", fillcolor="white" ];
			FB_LoopCounter1651379334 -> micro1957175487;
			micro1957175487 [label = "(F) micro : signed int16", fillcolor="white" ];
			FB_LoopCounter1651379334 -> o1374212198;
			o1374212198 [label = "(F) o : signed int16", fillcolor="white" ];
			
			annotations_pseudonode_FB_LoopCounter1651379334 [
				label="ANNOTATIONS\li : direction=INPUT\li : PLC type=BOOL\lmacro : direction=LOCAL\lmacro : PLC type=INT\lmicro : direction=LOCAL\lmicro : PLC type=INT\lo : direction=OUTPUT\lo : PLC type=INT\l",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_FB_LoopCounter1651379334 [
				label="INITIAL\li := false\lmacro := 0\lmicro := 0\lo := 0\l",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		_global2027044202 -> VerificationLoopDS2135563436;
		subgraph cluster_VerificationLoopDS2135563436 {
			node [shape="folder", style="filled"];
			//label="VerificationLoopDS";
			VerificationLoopDS2135563436 [label="VerificationLoopDS"];
			
			annotations_pseudonode_VerificationLoopDS2135563436 [
				label="ANNOTATIONS",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_VerificationLoopDS2135563436 [
				label="INITIAL",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		
		annotations_pseudonode__global2027044202 [
			label="ANNOTATIONS\l__assertion_error : generated\lEoC : generated\lBoC : generated\l",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		initamt_pseudonode__global2027044202 [
			label="INITIAL\l__assertion_error := 0\lEoC := false\lBoC := false\l",
			fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
	}
	subgraph clusterFB_LoopCounter {
		node [style="filled"];
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="FB_LoopCounter : FB_LoopCounter";
		
		annotations_pseudonode_FB_LoopCounter [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_FB_LoopCounter [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		l1_FB_LoopCounter [label="l1", color="black", fillcolor="white", shape="ellipse"];
		l2_FB_LoopCounter [label="l2", color="black", fillcolor="white", shape="ellipse"];
		l3_FB_LoopCounter [label="l3", color="black", fillcolor="white", shape="ellipse"];
		l4_FB_LoopCounter [label="l4", color="black", fillcolor="white", shape="ellipse"];
		l5_FB_LoopCounter [label="l5", color="black", fillcolor="white", shape="ellipse"];
		l6_FB_LoopCounter [label="l6", color="black", fillcolor="white", shape="ellipse"];
		l7_FB_LoopCounter [label="l7", color="black", fillcolor="white", shape="ellipse"];
		l8_FB_LoopCounter [label="l8", color="black", fillcolor="white", shape="ellipse"];
		l9_FB_LoopCounter [label="l9", color="black", fillcolor="white", shape="ellipse"];
		l10_FB_LoopCounter [label="l10", color="black", fillcolor="white", shape="ellipse"];
		l11_FB_LoopCounter [label="l11", color="black", fillcolor="white", shape="ellipse"];
		l12_FB_LoopCounter [label="l12", color="black", fillcolor="white", shape="ellipse"];
		l13_FB_LoopCounter [label="l13", color="black", fillcolor="white", shape="ellipse"];
		l14_FB_LoopCounter [label="l14", color="black", fillcolor="white", shape="ellipse"];
		l15_FB_LoopCounter [label="l15", color="black", fillcolor="white", shape="ellipse"];
		l16_FB_LoopCounter [label="l16", color="black", fillcolor="white", shape="ellipse"];
		l17_FB_LoopCounter [label="l17", color="black", fillcolor="white", shape="ellipse"];
		l18_FB_LoopCounter [label="l18", color="black", fillcolor="white", style=bold, shape="ellipse"];
		init_FB_LoopCounter -> l1_FB_LoopCounter [color="black", label="[i]"];
		l1_FB_LoopCounter -> l2_FB_LoopCounter [color="black", label="[(micro > 0)]"];
		l2_FB_LoopCounter -> l3_FB_LoopCounter [color="black", label="micro := (micro - 1)"];
		l1_FB_LoopCounter -> l4_FB_LoopCounter [color="black", label="[ELSE]"];
		l4_FB_LoopCounter -> l5_FB_LoopCounter [color="black", label="macro := (macro + 1)"];
		l5_FB_LoopCounter -> l6_FB_LoopCounter [color="black", label="micro := macro"];
		l3_FB_LoopCounter -> l7_FB_LoopCounter [color="black", label=""];
		l6_FB_LoopCounter -> l7_FB_LoopCounter [color="black", label=""];
		init_FB_LoopCounter -> l8_FB_LoopCounter [color="black", label="[ELSE]"];
		l7_FB_LoopCounter -> l9_FB_LoopCounter [color="black", label=""];
		l8_FB_LoopCounter -> l9_FB_LoopCounter [color="black", label=""];
		l9_FB_LoopCounter -> l10_FB_LoopCounter [color="black", label="o := macro"];
		l10_FB_LoopCounter -> l11_FB_LoopCounter [color="black", label="[(macro < 0)]"];
		l11_FB_LoopCounter -> l12_FB_LoopCounter [color="black", label="macro := 0"];
		l10_FB_LoopCounter -> l13_FB_LoopCounter [color="black", label="[ELSE]"];
		l12_FB_LoopCounter -> l14_FB_LoopCounter [color="black", label=""];
		l13_FB_LoopCounter -> l14_FB_LoopCounter [color="black", label=""];
		l14_FB_LoopCounter -> l15_FB_LoopCounter [color="black", label="[(micro < 0)]"];
		l15_FB_LoopCounter -> l16_FB_LoopCounter [color="black", label="micro := 0"];
		l14_FB_LoopCounter -> l17_FB_LoopCounter [color="black", label="[ELSE]"];
		l16_FB_LoopCounter -> l18_FB_LoopCounter [color="black", label=""];
		l17_FB_LoopCounter -> l18_FB_LoopCounter [color="black", label=""];
	}
	subgraph clusterVerificationLoop {
		node [style="filled"];
		style=bold;
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="VerificationLoop : VerificationLoopDS";
		
		annotations_pseudonode_VerificationLoop [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_VerificationLoop [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		end_VerificationLoop [label="end", color="black", fillcolor="cadetblue1", style=bold, shape="ellipse"];
		loop_start_VerificationLoop [label="loop_start", color="black", fillcolor="white", shape="ellipse"];
		prepare_BoC_VerificationLoop [label="prepare_BoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		l_main_call_VerificationLoop [label="l_main_call", color="black", fillcolor="white", shape="ellipse"];
		callEnd_VerificationLoop [label="callEnd", color="black", fillcolor="white", shape="ellipse"];
		prepare_EoC_VerificationLoop [label="prepare_EoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		init_VerificationLoop -> loop_start_VerificationLoop [color="black", label=""];
		loop_start_VerificationLoop -> prepare_BoC_VerificationLoop [color="blue", label="instance/i := NONDETERMINISTIC of bool\lBoC := true (*)\l"];
		prepare_BoC_VerificationLoop -> l_main_call_VerificationLoop [color="blue", label="BoC := false (*)"];
		l_main_call_VerificationLoop -> callEnd_VerificationLoop [color="black", label="CALL: FB_LoopCounter:instance(\l   IN:    OUT: )\l"];
		callEnd_VerificationLoop -> prepare_EoC_VerificationLoop [color="blue", label="EoC := true (*)"];
		prepare_EoC_VerificationLoop -> loop_start_VerificationLoop [color="blue", label="EoC := false (*)"];
		loop_start_VerificationLoop -> end_VerificationLoop [color="black", label="[false]"];
	}
}

