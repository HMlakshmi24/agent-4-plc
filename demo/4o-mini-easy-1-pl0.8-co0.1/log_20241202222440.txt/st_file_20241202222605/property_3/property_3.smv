-- Model
MODULE main
	VAR
		loc : {init_pv, end, loop_start, prepare_BoC, l_main_call, prepare_EoC, verificationLoop_VerificationLoop_l5, verificationLoop_VerificationLoop_l7, verificationLoop_VerificationLoop_l9, verificationLoop_VerificationLoop_l14, verificationLoop_VerificationLoop_l18};
		instance_i : boolean;
		instance_macro : signed word[16]; -- frozen
		instance_micro : signed word[16];
		EoC : boolean; -- frozen
		BoC : boolean; -- frozen
	
	ASSIGN
		-- CFA structure (loc)
		init(loc) := init_pv;
		next(loc) := case
			loc = init_pv & (TRUE) : loop_start;
			loc = loop_start & (TRUE) : prepare_BoC;
			loc = prepare_BoC & (TRUE) : l_main_call;
			loc = verificationLoop_VerificationLoop_l18 & (TRUE) : prepare_EoC;
			loc = prepare_EoC & (TRUE) : loop_start;
			loc = l_main_call & ((instance_i) & ((instance_micro) > (0sd16_0))) : verificationLoop_VerificationLoop_l7;
			loc = l_main_call & ((instance_i) & (!((instance_micro) > (0sd16_0)))) : verificationLoop_VerificationLoop_l5;
			loc = verificationLoop_VerificationLoop_l5 & (TRUE) : verificationLoop_VerificationLoop_l7;
			loc = l_main_call & (!(instance_i)) : verificationLoop_VerificationLoop_l9;
			loc = verificationLoop_VerificationLoop_l7 & (TRUE) : verificationLoop_VerificationLoop_l9;
			loc = verificationLoop_VerificationLoop_l9 & ((instance_macro) < (0sd16_0)) : verificationLoop_VerificationLoop_l14;
			loc = verificationLoop_VerificationLoop_l9 & (!((instance_macro) < (0sd16_0))) : verificationLoop_VerificationLoop_l14;
			loc = verificationLoop_VerificationLoop_l14 & ((instance_micro) < (0sd16_0)) : verificationLoop_VerificationLoop_l18;
			loc = verificationLoop_VerificationLoop_l14 & (!((instance_micro) < (0sd16_0))) : verificationLoop_VerificationLoop_l18;
			TRUE: loc;
		esac;
		
		init(instance_i) := FALSE;
		next(instance_i) := case
			loc = loop_start & (TRUE) : {TRUE, FALSE};
			TRUE  : instance_i;
		esac;
		init(instance_macro) := 0sd16_0;
		next(instance_macro) := case
			loc = l_main_call & ((instance_i) & (!((instance_micro) > (0sd16_0)))) : (instance_macro) + (0sd16_1);
			loc = verificationLoop_VerificationLoop_l9 & ((instance_macro) < (0sd16_0)) : 0sd16_0;
			TRUE  : instance_macro;
		esac;
		init(instance_micro) := 0sd16_0;
		next(instance_micro) := case
			loc = l_main_call & ((instance_i) & ((instance_micro) > (0sd16_0))) : (instance_micro) - (0sd16_1);
			loc = verificationLoop_VerificationLoop_l5 & (TRUE) : instance_macro;
			loc = verificationLoop_VerificationLoop_l14 & ((instance_micro) < (0sd16_0)) : 0sd16_0;
			TRUE  : instance_micro;
		esac;
		init(EoC) := FALSE;
		next(EoC) := case
			loc = verificationLoop_VerificationLoop_l18 & (TRUE) : TRUE;
			loc = prepare_EoC & (TRUE) : FALSE;
			TRUE  : EoC;
		esac;
		init(BoC) := FALSE;
		next(BoC) := case
			loc = loop_start & (TRUE) : TRUE;
			loc = prepare_BoC & (TRUE) : FALSE;
			TRUE  : BoC;
		esac;

-- Requirement
CTLSPEC AG((EoC) -> (!((instance_macro) < (0sd16_0))));
