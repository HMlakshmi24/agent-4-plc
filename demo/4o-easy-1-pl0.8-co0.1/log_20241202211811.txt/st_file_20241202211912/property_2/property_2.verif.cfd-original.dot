digraph G {
	subgraph cluster__global2061865206 {
		node [shape="folder", style="filled"];
		//label="_global";
		_global2061865206 [label="_global"];
		_global2061865206 -> instance622938007;
		instance622938007 [label = "(F) instance : _global/NOT_GATE", fillcolor="white" ];
		_global2061865206 -> verificationLoop599203108;
		verificationLoop599203108 [label = "(F) verificationLoop : _global/VerificationLoopDS", fillcolor="white" , peripheries=2];
		_global2061865206 -> EoC674659751;
		EoC674659751 [label = "(F) EoC : bool", fillcolor="white" ];
		_global2061865206 -> BoC1009260571;
		BoC1009260571 [label = "(F) BoC : bool", fillcolor="white" ];
		_global2061865206 -> NOT_GATE2058762296;
		subgraph cluster_NOT_GATE2058762296 {
			node [shape="folder", style="filled"];
			//label="NOT_GATE";
			NOT_GATE2058762296 [label="NOT_GATE"];
			NOT_GATE2058762296 -> Input1566390876;
			Input1566390876 [label = "(F) Input : bool", fillcolor="white" ];
			NOT_GATE2058762296 -> NegatedOutput1359849336;
			NegatedOutput1359849336 [label = "(F) NegatedOutput : bool", fillcolor="white" ];
			
			annotations_pseudonode_NOT_GATE2058762296 [
				label="ANNOTATIONS\lInput : direction=INPUT\lInput : PLC type=BOOL\lNegatedOutput : direction=OUTPUT\lNegatedOutput : PLC type=BOOL\l",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_NOT_GATE2058762296 [
				label="INITIAL\lInput := false\lNegatedOutput := false\l",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		_global2061865206 -> AND_GATE1386903362;
		subgraph cluster_AND_GATE1386903362 {
			node [shape="folder", style="filled"];
			//label="AND_GATE";
			AND_GATE1386903362 [label="AND_GATE"];
			AND_GATE1386903362 -> Input1411272987;
			Input1411272987 [label = "(F) Input1 : bool", fillcolor="white" ];
			AND_GATE1386903362 -> Input21392109755;
			Input21392109755 [label = "(F) Input2 : bool", fillcolor="white" ];
			AND_GATE1386903362 -> AndOutput860176544;
			AndOutput860176544 [label = "(F) AndOutput : bool", fillcolor="white" ];
			
			annotations_pseudonode_AND_GATE1386903362 [
				label="ANNOTATIONS\lInput1 : direction=INPUT\lInput1 : PLC type=BOOL\lInput2 : direction=INPUT\lInput2 : PLC type=BOOL\lAndOutput : direction=OUTPUT\lAndOutput : PLC type=BOOL\l",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_AND_GATE1386903362 [
				label="INITIAL\lInput1 := false\lInput2 := false\lAndOutput := false\l",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		_global2061865206 -> OR_GATE1024266763;
		subgraph cluster_OR_GATE1024266763 {
			node [shape="folder", style="filled"];
			//label="OR_GATE";
			OR_GATE1024266763 [label="OR_GATE"];
			OR_GATE1024266763 -> Input1885876140;
			Input1885876140 [label = "(F) Input1 : bool", fillcolor="white" ];
			OR_GATE1024266763 -> Input21548993077;
			Input21548993077 [label = "(F) Input2 : bool", fillcolor="white" ];
			OR_GATE1024266763 -> OrOutput582479659;
			OrOutput582479659 [label = "(F) OrOutput : bool", fillcolor="white" ];
			
			annotations_pseudonode_OR_GATE1024266763 [
				label="ANNOTATIONS\lInput1 : direction=INPUT\lInput1 : PLC type=BOOL\lInput2 : direction=INPUT\lInput2 : PLC type=BOOL\lOrOutput : direction=OUTPUT\lOrOutput : PLC type=BOOL\l",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_OR_GATE1024266763 [
				label="INITIAL\lInput1 := false\lInput2 := false\lOrOutput := false\l",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		_global2061865206 -> VerificationLoopDS195359600;
		subgraph cluster_VerificationLoopDS195359600 {
			node [shape="folder", style="filled"];
			//label="VerificationLoopDS";
			VerificationLoopDS195359600 [label="VerificationLoopDS"];
			
			annotations_pseudonode_VerificationLoopDS195359600 [
				label="ANNOTATIONS",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_VerificationLoopDS195359600 [
				label="INITIAL",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		
		annotations_pseudonode__global2061865206 [
			label="ANNOTATIONS\lEoC : generated\lBoC : generated\l",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		initamt_pseudonode__global2061865206 [
			label="INITIAL\lEoC := false\lBoC := false\l",
			fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
	}
	subgraph clusterNOT_GATE {
		node [style="filled"];
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="NOT_GATE : NOT_GATE";
		
		annotations_pseudonode_NOT_GATE [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_NOT_GATE [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		l1_NOT_GATE [label="l1", color="black", fillcolor="white", style=bold, shape="ellipse"];
		init_NOT_GATE -> l1_NOT_GATE [color="black", label="NegatedOutput := (! Input)"];
	}
	subgraph clusterAND_GATE {
		node [style="filled"];
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="AND_GATE : AND_GATE";
		
		annotations_pseudonode_AND_GATE [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_AND_GATE [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		l1_AND_GATE [label="l1", color="black", fillcolor="white", style=bold, shape="ellipse"];
		init_AND_GATE -> l1_AND_GATE [color="black", label="AndOutput := (Input1 && Input2)"];
	}
	subgraph clusterOR_GATE {
		node [style="filled"];
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="OR_GATE : OR_GATE";
		
		annotations_pseudonode_OR_GATE [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_OR_GATE [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		l1_OR_GATE [label="l1", color="black", fillcolor="white", style=bold, shape="ellipse"];
		init_OR_GATE -> l1_OR_GATE [color="black", label="OrOutput := (Input1 || Input2)"];
	}
	subgraph clusterVerificationLoop {
		node [style="filled"];
		style=bold;
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="VerificationLoop : VerificationLoopDS";
		
		annotations_pseudonode_VerificationLoop [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_VerificationLoop [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		end_VerificationLoop [label="end", color="black", fillcolor="cadetblue1", style=bold, shape="ellipse"];
		loop_start_VerificationLoop [label="loop_start", color="black", fillcolor="white", shape="ellipse"];
		prepare_BoC_VerificationLoop [label="prepare_BoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		l_main_call_VerificationLoop [label="l_main_call", color="black", fillcolor="white", shape="ellipse"];
		callEnd_VerificationLoop [label="callEnd", color="black", fillcolor="white", shape="ellipse"];
		prepare_EoC_VerificationLoop [label="prepare_EoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		init_VerificationLoop -> loop_start_VerificationLoop [color="black", label=""];
		loop_start_VerificationLoop -> prepare_BoC_VerificationLoop [color="blue", label="instance/Input := NONDETERMINISTIC of bool\lBoC := true (*)\l"];
		prepare_BoC_VerificationLoop -> l_main_call_VerificationLoop [color="blue", label="BoC := false (*)"];
		l_main_call_VerificationLoop -> callEnd_VerificationLoop [color="black", label="CALL: NOT_GATE:instance(\l   IN:    OUT: )\l"];
		callEnd_VerificationLoop -> prepare_EoC_VerificationLoop [color="blue", label="EoC := true (*)"];
		prepare_EoC_VerificationLoop -> loop_start_VerificationLoop [color="blue", label="EoC := false (*)"];
		loop_start_VerificationLoop -> end_VerificationLoop [color="black", label="[false]"];
	}
}

