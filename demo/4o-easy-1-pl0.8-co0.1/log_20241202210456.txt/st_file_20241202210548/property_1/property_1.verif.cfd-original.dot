digraph G {
	subgraph cluster__global1917579871 {
		node [shape="folder", style="filled"];
		//label="_global";
		_global1917579871 [label="_global"];
		_global1917579871 -> instance382698552;
		instance382698552 [label = "(F) instance : _global/FB_MotorControl", fillcolor="white" ];
		_global1917579871 -> __assertion_error581359452;
		__assertion_error581359452 [label = "(F) __assertion_error : unsigned int16", fillcolor="white" ];
		_global1917579871 -> verificationLoop583744857;
		verificationLoop583744857 [label = "(F) verificationLoop : _global/VerificationLoopDS", fillcolor="white" , peripheries=2];
		_global1917579871 -> EoC2084912180;
		EoC2084912180 [label = "(F) EoC : bool", fillcolor="white" ];
		_global1917579871 -> BoC1401564942;
		BoC1401564942 [label = "(F) BoC : bool", fillcolor="white" ];
		_global1917579871 -> FB_MotorControl716896919;
		subgraph cluster_FB_MotorControl716896919 {
			node [shape="folder", style="filled"];
			//label="FB_MotorControl";
			FB_MotorControl716896919 [label="FB_MotorControl"];
			FB_MotorControl716896919 -> Pressure_LOW1383031847;
			Pressure_LOW1383031847 [label = "(F) Pressure_LOW : float32", fillcolor="white" ];
			FB_MotorControl716896919 -> Motor_Critical881280045;
			Motor_Critical881280045 [label = "(F) Motor_Critical : bool", fillcolor="white" ];
			FB_MotorControl716896919 -> Threshold1800031808;
			Threshold1800031808 [label = "(F) Threshold : float32", fillcolor="white" ];
			
			annotations_pseudonode_FB_MotorControl716896919 [
				label="ANNOTATIONS\lPressure_LOW : direction=INPUT\lPressure_LOW : PLC type=REAL\lMotor_Critical : direction=OUTPUT\lMotor_Critical : PLC type=BOOL\lThreshold : direction=LOCAL\lThreshold : PLC type=REAL\l",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_FB_MotorControl716896919 [
				label="INITIAL\lPressure_LOW := 0.0\lMotor_Critical := false\lThreshold := 36464.0\l",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		_global1917579871 -> VerificationLoopDS850300711;
		subgraph cluster_VerificationLoopDS850300711 {
			node [shape="folder", style="filled"];
			//label="VerificationLoopDS";
			VerificationLoopDS850300711 [label="VerificationLoopDS"];
			
			annotations_pseudonode_VerificationLoopDS850300711 [
				label="ANNOTATIONS",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_VerificationLoopDS850300711 [
				label="INITIAL",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		
		annotations_pseudonode__global1917579871 [
			label="ANNOTATIONS\l__assertion_error : generated\lEoC : generated\lBoC : generated\l",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		initamt_pseudonode__global1917579871 [
			label="INITIAL\l__assertion_error := 0\lEoC := false\lBoC := false\l",
			fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
	}
	subgraph clusterFB_MotorControl {
		node [style="filled"];
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="FB_MotorControl : FB_MotorControl";
		
		annotations_pseudonode_FB_MotorControl [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_FB_MotorControl [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		l1_FB_MotorControl [label="l1", color="black", fillcolor="white", shape="ellipse"];
		l2_FB_MotorControl [label="l2", color="black", fillcolor="white", shape="ellipse"];
		l3_FB_MotorControl [label="l3", color="black", fillcolor="white", shape="ellipse"];
		l4_FB_MotorControl [label="l4", color="black", fillcolor="white", shape="ellipse"];
		l5_FB_MotorControl [label="l5", color="black", fillcolor="white", style=bold, shape="ellipse"];
		init_FB_MotorControl -> l1_FB_MotorControl [color="black", label="[(Pressure_LOW < Threshold)]"];
		l1_FB_MotorControl -> l2_FB_MotorControl [color="black", label="Motor_Critical := true"];
		init_FB_MotorControl -> l3_FB_MotorControl [color="black", label="[ELSE]"];
		l3_FB_MotorControl -> l4_FB_MotorControl [color="black", label="Motor_Critical := false"];
		l2_FB_MotorControl -> l5_FB_MotorControl [color="black", label=""];
		l4_FB_MotorControl -> l5_FB_MotorControl [color="black", label=""];
	}
	subgraph clusterVerificationLoop {
		node [style="filled"];
		style=bold;
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="VerificationLoop : VerificationLoopDS";
		
		annotations_pseudonode_VerificationLoop [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_VerificationLoop [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		end_VerificationLoop [label="end", color="black", fillcolor="cadetblue1", style=bold, shape="ellipse"];
		loop_start_VerificationLoop [label="loop_start", color="black", fillcolor="white", shape="ellipse"];
		prepare_BoC_VerificationLoop [label="prepare_BoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		l_main_call_VerificationLoop [label="l_main_call", color="black", fillcolor="white", shape="ellipse"];
		callEnd_VerificationLoop [label="callEnd", color="black", fillcolor="white", shape="ellipse"];
		prepare_EoC_VerificationLoop [label="prepare_EoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		init_VerificationLoop -> loop_start_VerificationLoop [color="black", label=""];
		loop_start_VerificationLoop -> prepare_BoC_VerificationLoop [color="blue", label="instance/Pressure_LOW := NONDETERMINISTIC of float\l32\lBoC := true (*)\l"];
		prepare_BoC_VerificationLoop -> l_main_call_VerificationLoop [color="blue", label="BoC := false (*)"];
		l_main_call_VerificationLoop -> callEnd_VerificationLoop [color="black", label="CALL: FB_MotorControl:instance(\l   IN:    OUT: )\l"];
		callEnd_VerificationLoop -> prepare_EoC_VerificationLoop [color="blue", label="EoC := true (*)"];
		prepare_EoC_VerificationLoop -> loop_start_VerificationLoop [color="blue", label="EoC := false (*)"];
		loop_start_VerificationLoop -> end_VerificationLoop [color="black", label="[false]"];
	}
}

