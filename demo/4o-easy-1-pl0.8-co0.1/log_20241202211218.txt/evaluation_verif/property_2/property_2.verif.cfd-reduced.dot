digraph G {
	subgraph cluster__global1711410537 {
		node [shape="folder", style="filled"];
		//label="_global";
		_global1711410537 [label="_global"];
		_global1711410537 -> instance722929970;
		instance722929970 [label = "(F) instance : _global/FB_ValueTracker", fillcolor="white" ];
		_global1711410537 -> verificationLoop2044082767;
		verificationLoop2044082767 [label = "(F) verificationLoop : _global/VerificationLoopDS", fillcolor="white" , peripheries=2];
		_global1711410537 -> EoC1277969640;
		EoC1277969640 [label = "(F) EoC : bool", fillcolor="white" ];
		_global1711410537 -> BoC2076356118;
		BoC2076356118 [label = "(F) BoC : bool", fillcolor="white" ];
		_global1711410537 -> FB_ValueTracker928099543;
		subgraph cluster_FB_ValueTracker928099543 {
			node [shape="folder", style="filled"];
			//label="FB_ValueTracker";
			FB_ValueTracker928099543 [label="FB_ValueTracker"];
			FB_ValueTracker928099543 -> aaa415758005;
			aaa415758005 [label = "(F) aaa : signed int32", fillcolor="white" ];
			FB_ValueTracker928099543 -> bbb989030690;
			bbb989030690 [label = "(F) bbb : signed int32", fillcolor="white" ];
			FB_ValueTracker928099543 -> OUT140163428;
			OUT140163428 [label = "(F) OUT : signed int32", fillcolor="white" ];
			FB_ValueTracker928099543 -> UPDATED_CYCLE51362851;
			UPDATED_CYCLE51362851 [label = "(F) UPDATED_CYCLE : signed int32", fillcolor="white" ];
			FB_ValueTracker928099543 -> CYCLE46351362;
			CYCLE46351362 [label = "(F) CYCLE : signed int32", fillcolor="white" ];
			
			annotations_pseudonode_FB_ValueTracker928099543 [
				label="ANNOTATIONS\laaa : direction=INPUT\laaa : PLC type=DINT\lbbb : direction=INPUT\lbbb : PLC type=DINT\lOUT : direction=OUTPUT\lOUT : PLC type=DINT\lUPDATED_CYCLE : direction=OUTPUT\lUPDATED_CYCLE : PLC type=DINT\lCYCLE : direction=LOCAL\lCYCLE : PLC type=DINT\l",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_FB_ValueTracker928099543 [
				label="INITIAL\laaa := 0\lbbb := 0\lOUT := 0\lUPDATED_CYCLE := 0\lCYCLE := 0\l",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		_global1711410537 -> VerificationLoopDS2079100080;
		subgraph cluster_VerificationLoopDS2079100080 {
			node [shape="folder", style="filled"];
			//label="VerificationLoopDS";
			VerificationLoopDS2079100080 [label="VerificationLoopDS"];
			
			annotations_pseudonode_VerificationLoopDS2079100080 [
				label="ANNOTATIONS",
				fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
			initamt_pseudonode_VerificationLoopDS2079100080 [
				label="INITIAL",
				fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
		}
		
		annotations_pseudonode__global1711410537 [
			label="ANNOTATIONS\lEoC : generated\lBoC : generated\l",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		initamt_pseudonode__global1711410537 [
			label="INITIAL\lEoC := false\lBoC := false\l",
			fontsize=9, margin="0.04,0.04", fillcolor="lightyellow", shape="rectangle", style="dashed"];
	}
	subgraph clusterFB_ValueTracker {
		node [style="filled"];
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="FB_ValueTracker : FB_ValueTracker";
		
		annotations_pseudonode_FB_ValueTracker [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_FB_ValueTracker [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		l7_FB_ValueTracker [label="l7", color="black", fillcolor="white", shape="ellipse"];
		l9_FB_ValueTracker [label="l9", color="black", fillcolor="white", shape="ellipse"];
		l10_FB_ValueTracker [label="l10", color="black", fillcolor="white", style=bold, shape="ellipse"];
		init_FB_ValueTracker -> l7_FB_ValueTracker [color="black", label="[(aaa = bbb)]\laaa := (aaa + 1)\l"];
		init_FB_ValueTracker -> l7_FB_ValueTracker [color="black", label="[((! (aaa = bbb)) && (aaa > bbb))]\lbbb := (bbb + 1)\l"];
		init_FB_ValueTracker -> l7_FB_ValueTracker [color="black", label="[((! (aaa = bbb)) && (! ((! (aaa = bbb)) && (aaa >\l bbb))))]\laaa := (aaa + 1)\l"];
		l7_FB_ValueTracker -> l9_FB_ValueTracker [color="black", label="OUT := (aaa - bbb)\lCYCLE := (CYCLE + 1)\l"];
		l9_FB_ValueTracker -> l10_FB_ValueTracker [color="black", label="UPDATED_CYCLE := CYCLE"];
	}
	subgraph clusterVerificationLoop {
		node [style="filled"];
		style=bold;
		color="black";
		fontsize=10;
		ranksep=0.4;
		
		label="VerificationLoop : VerificationLoopDS";
		
		annotations_pseudonode_VerificationLoop [
			label="ANNOTATIONS",
			fontsize=9, margin="0.04,0.04", fillcolor="white", shape="rectangle", style="dashed"];
		
		init_VerificationLoop [label="init", color="black", fillcolor="cadetblue1", peripheries=2, shape="ellipse"];
		end_VerificationLoop [label="end", color="black", fillcolor="cadetblue1", style=bold, shape="ellipse"];
		loop_start_VerificationLoop [label="loop_start", color="black", fillcolor="white", shape="ellipse"];
		prepare_BoC_VerificationLoop [label="prepare_BoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		l_main_call_VerificationLoop [label="l_main_call", color="black", fillcolor="white", shape="ellipse"];
		callEnd_VerificationLoop [label="callEnd", color="black", fillcolor="white", shape="ellipse"];
		prepare_EoC_VerificationLoop [label="prepare_EoC", color="black", fillcolor="cadetblue1", shape="ellipse"];
		init_VerificationLoop -> loop_start_VerificationLoop [color="black", label=""];
		loop_start_VerificationLoop -> prepare_BoC_VerificationLoop [color="blue", label="instance/aaa := NONDETERMINISTIC of signed int32\linstance/bbb := NONDETERMINISTIC of signed int32\lBoC := true (*)\l"];
		prepare_BoC_VerificationLoop -> l_main_call_VerificationLoop [color="blue", label="BoC := false (*)"];
		l_main_call_VerificationLoop -> callEnd_VerificationLoop [color="black", label="CALL: FB_ValueTracker:instance(\l   IN:    OUT: )\l"];
		callEnd_VerificationLoop -> prepare_EoC_VerificationLoop [color="blue", label="EoC := true (*)"];
		prepare_EoC_VerificationLoop -> loop_start_VerificationLoop [color="blue", label="EoC := false (*)"];
		loop_start_VerificationLoop -> end_VerificationLoop [color="black", label="[false]"];
	}
}

